<Window x:Class="MyDev.Views.ModernViews"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MyDev.Views"
        xmlns:conv="clr-namespace:MyDev.Converts"
        xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        xmlns:data="clr-namespace:System.Windows.Data;assembly=PresentationFramework"
        mc:Ignorable="d"
        Loaded="GroupViewer_Loaded"
        x:Name="ModernViewers"
        KeyDown="GroupViewer_KeyDown"
        WindowStyle="ThreeDBorderWindow"
   	  WindowChrome.ResizeGripDirection="BottomRight"
	  ResizeMode="CanResizeWithGrip"
        Title="Modern Style Mullti Viewer types" Height="450" Width="800"
        MinHeight="500" MinWidth="900">
    <!--//These next two lines (included above) are needed for the Listbox with Expanders-->
    <!--xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        xmlns:data="clr-namespace:System.Windows.Data;assembly=PresentationFramework"-->
    
    
    <!--<Window.DataContext>
        <local:GroupedAccounts/>        
    </Window.DataContext>-->

    <Window.Resources>

        <ControlTemplate x:Key="GroupItemTemplate">
            <Expander IsExpanded="True" VerticalAlignment="Bottom" VerticalContentAlignment="Bottom">
                <!-- Header Panel of the Expander control -->
                <Expander.Header>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding AcType}" 
				            FontWeight="Bold" Background="{StaticResource Cyan5}" FontSize="20">
                        </TextBlock>
                    </StackPanel>
                </Expander.Header>

                <!-- Items panel to hold items inside the Expander control -->
                <ItemsPresenter >
                </ItemsPresenter>
            </Expander>
        </ControlTemplate>

        <Style x:Key="GrpAcctsListBoxItemStyle" TargetType="ListBoxItem">
            <!--<Setter Property="Background" Value="{StaticResource Gray2}" />-->
            <!--<Setter Property="Foreground" Value="{StaticResource Black0}" />-->
            <Setter Property="FontWeight" Value="Normal" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="Width" Value="{Binding Path=Width, ElementName=ViewersList}" />

            <!--Remove focus rectangle - IT WORKS-->
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border
							x:Name="_Border"
							Padding="3"
							Width="{Binding Path=ActualWidth, RelativeSource={RelativeSource 
							AncestorType=ListBoxItem}}"
							HorizontalAlignment="Center">
                            <ContentPresenter  
								HorizontalAlignment="Center"
								/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="false" />
                                    <Condition Property="IsSelected" Value="False" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                                    <Setter Property="TextElement.Foreground" Value="{StaticResource Black0}" />
                                    <Setter TargetName="_Border" Property="Background" Value="{StaticResource Blue9}"/>
                                    <Setter Property="FontSize" Value="14" />
                                    <Setter Property="FontWeight" Value="DemiBold" />
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="false" />
                                    <Condition Property="IsSelected" Value="True" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                                    <Setter Property="TextElement.Foreground" Value="{StaticResource White0}" />
                                    <Setter TargetName="_Border" Property="Background" Value="{StaticResource Red5}"/>
                                    <Setter Property="FontSize" Value="14" />
                                    <Setter Property="FontWeight" Value="DemiBold" />
                                </MultiTrigger.Setters>
                            </MultiTrigger>

                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="true" />
                                    <Condition Property="IsSelected" Value="False" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                                    <Setter Property="TextElement.Foreground" Value="{StaticResource White0}" />
                                    <Setter TargetName="_Border" Property="Background" Value="{StaticResource Red0}" />
                                    <Setter Property="FontSize" Value="14" />
                                    <Setter Property="FontWeight" Value="DemiBold" />
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="true" />
                                    <Condition Property="IsSelected" Value="true" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                    <Setter Property="TextElement.Foreground" Value="{StaticResource White0}" />
                                    <Setter TargetName="_Border" Property="Background" Value="{StaticResource Blue0}" />
                                    <Setter TargetName="_Border" Property="Background" Value="{StaticResource Blue2}" />
                                    <Setter Property="FontSize" Value="14" />
                                    <Setter Property="FontWeight" Value="DemiBold" />
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Bank DataGrid Highlighting so that its easy to see what is selected even when the control is not focused-->
        <Style x:Key="BankAccountGridStyle" TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
            <Style.Triggers>
                <!--// Window IS FOCUSED-->

                <!--#region Triggers-->

                <!--#### ACTYPE = 1 ####-->
                <!-- SELECTED,  MOUSEOVER / TRUE-->
                <!--1, True, True -->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding AcType}" Value="1" />
                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" />
                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGridRow}, Path=IsMouseOver}" Value="True" />
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="Background" Value="{StaticResource Red0}" />
                        <Setter Property="Foreground" Value="{StaticResource White0}" />
                        <Setter Property="FontWeight" Value="DemiBold" />
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>

                <!--#### ACTYPE = 1 ####-->
                <!-- SELECTED,  MOUSEOVER / FALSE-->
                <!--1, True, False -->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding AcType}" Value="1" />
                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="true" />
                        <!--<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=IsKeyboardFocusWithin}" Value="False" />-->
                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGridRow}, Path=IsMouseOver}" Value="False" />
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="Background" Value="{Binding Converter={StaticResource UniversalConvert}, ConverterParameter=Blue0}" />
                        <Setter Property="Foreground" Value="{StaticResource White0}" />
                        <Setter Property="FontWeight" Value="Bold" />
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>

                <!--#### ACTYPE = 1 ####-->
                <!--NOT SELECTED,  MOUSEOVER / TRUE-->
                <!--1, False, True -->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding AcType}" Value="1" />
                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="False" />
                        <!--<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=IsKeyboardFocusWithin}" Value="False" />-->
                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGridRow}, Path=IsMouseOver}" Value="True" />
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="Background" Value="{Binding Converter={StaticResource UniversalConvert}, ConverterParameter=Blue3}" />
                        <Setter Property="Foreground" Value="{StaticResource White0}" />
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>

                <!--#### ACTYPE = 1 ####-->
                <!--NOT SELECTED,  MOUSEOVER / FALSE-->
                <!--1, False, False -->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding AcType}" Value="1" />
                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="False" />
                        <!--<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=IsKeyboardFocusWithin}" Value="False" />-->
                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGridRow}, Path=IsMouseOver}" Value="False" />
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="Background" Value="{Binding Converter={StaticResource UniversalConvert}, ConverterParameter=Cyan3}" />
                        <Setter Property="Foreground" Value="{StaticResource Black2}" />
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>

                <!--=========================================================================================================-->
                <!--#### ACTYPE = 2 ####-->

                <!--###  UNFOCUSED OPTIONS ###-->

                <!--SELECTED,  MOUSEOVER / TRUE -->
                <!--2, True, True -->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding AcType}" Value="2" />
                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" />
                        <!--<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=IsKeyboardFocusWithin}" Value="False" />-->
                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGridRow}, Path=IsMouseOver}" Value="True" />
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="Background" Value="{StaticResource Red0}" />
                        <Setter Property="Foreground" Value="{StaticResource White0}" />
                        <Setter Property="FontWeight" Value="DemiBold" />
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>

                <!--SELECTED,  MOUSEOVER / FALSE-->
                <!--2, True, False -->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding AcType}" Value="2" />
                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="true" />
                        <!--<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=IsKeyboardFocusWithin}" Value="False" />-->
                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGridRow}, Path=IsMouseOver}" Value="False" />
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <!--<Setter Property="Background" Value="{StaticResource Red1}" />-->
                        <Setter Property="Background" Value="{Binding Converter={StaticResource UniversalConvert}, ConverterParameter=Blue0}" />
                        <Setter Property="Foreground" Value="{StaticResource White0}" />
                        <Setter Property="FontWeight" Value="Bold" />
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>

                <!--#### ACTYPE = 2 ##*##-->
                <!--NOT SELECTED,  MOUSEOVER / FALSE-->
                <!--2, False, False -->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding AcType}" Value="2" />
                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="False" />
                        <!--<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=IsKeyboardFocusWithin}" Value="False" />-->
                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGridRow}, Path=IsMouseOver}" Value="False" />
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <!--<Setter Property="Background" Value="{StaticResource Red1}" />-->
                        <Setter Property="Background" Value="{StaticResource Green9}" />
                        <Setter Property="Foreground" Value="{StaticResource Black2}" />
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>

                <!--#### ACTYPE = 2 ####-->
                <!--NOT SELECTED,  MOUSEOVER / TRUE -->
                <!--2, False, True -->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding AcType}" Value="2" />
                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="False" />
                        <!--<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=IsKeyboardFocusWithin}" Value="False" />-->
                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGridRow}, Path=IsMouseOver}" Value="True" />
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <!--<Setter Property="Background" Value="{StaticResource Red1}" />-->
                        <Setter Property="Background" Value="DarkGreen" />
                        <Setter Property="Foreground" Value="{StaticResource White0}" />
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>

                <!--=========================================================================================================-->
                <!--#### ACTYPE = 3 ####-->

                <!--SELECTED,  MOUSEOVER / TRUE -->
                <!--3, True, True -->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding AcType}" Value="3" />
                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" />
                        <!--<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=IsKeyboardFocusWithin}" Value="False" />-->
                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGridRow}, Path=IsMouseOver}" Value="True" />
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="Background" Value="{StaticResource Red0}" />
                        <Setter Property="Foreground" Value="{StaticResource White0}" />
                        <Setter Property="FontWeight" Value="DemiBold" />
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>

                <!--SELECTED,  MOUSEOVER / FALSE -->
                <!--3, True, False -->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding AcType}" Value="3" />
                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="true" />
                        <!--<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=IsKeyboardFocusWithin}" Value="False" />-->
                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGridRow}, Path=IsMouseOver}" Value="False" />
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <!--<Setter Property="Background" Value="{StaticResource Red1}" />-->
                        <Setter Property="Background" Value="{Binding Converter={StaticResource UniversalConvert}, ConverterParameter=Blue0}" />
                        <Setter Property="Foreground" Value="{StaticResource White0}" />
                        <Setter Property="FontWeight" Value="Bold" />
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>

                <!--#### ACTYPE = 3 ##*##-->
                <!--NOT SELECTED,  MOUSEOVER / FALSE -->
                <!--3, False, False -->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding AcType}" Value="3" />
                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="False" />
                        <!--<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=IsKeyboardFocusWithin}" Value="False" />-->
                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGridRow}, Path=IsMouseOver}" Value="False" />
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <!--<Setter Property="Background" Value="{StaticResource Red1}" />-->
                        <Setter Property="Background" Value="{Binding Converter={StaticResource UniversalConvert}, ConverterParameter=Yellow4}" />
                        <Setter Property="Foreground" Value="{StaticResource White0}" />
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>

                <!--#### ACTYPE = 3 ####-->
                <!--NOT SELECTED,  MOUSEOVER / TRUE -->
                <!--3, False, True -->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding AcType}" Value="3" />
                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="False" />
                        <!--<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=IsKeyboardFocusWithin}" Value="False" />-->
                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGridRow}, Path=IsMouseOver}" Value="True" />
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <!--<Setter Property="Background" Value="{StaticResource Red1}" />-->
                        <Setter Property="Background" Value="{Binding Converter={StaticResource UniversalConvert}, ConverterParameter=Orange1}" />
                        <Setter Property="Foreground" Value="{StaticResource White0}" />
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>

                <!--=========================================================================================================-->
                <!--#### ACTYPE = 4 ####-->

                <!--SELECTED,  MOUSEOVER / TRUE -->
                <!--4, True, True -->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding AcType}" Value="4" />
                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" />
                        <!--<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=IsKeyboardFocusWithin}" Value="False" />-->
                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGridRow}, Path=IsMouseOver}" Value="True" />
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="Background" Value="{StaticResource Red0}" />
                        <Setter Property="Foreground" Value="{StaticResource White0}" />
                        <Setter Property="FontWeight" Value="DemiBold" />
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>

                <!--SELECTED,  MOUSEOVER / FALSE -->
                <!--4, True, False -->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding AcType}" Value="4" />
                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="true" />
                        <!--<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=IsKeyboardFocusWithin}" Value="False" />-->
                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGridRow}, Path=IsMouseOver}" Value="False" />
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <!--<Setter Property="Background" Value="{StaticResource Red1}" />-->
                        <Setter Property="Background" Value="{Binding Converter={StaticResource UniversalConvert}, ConverterParameter=Blue0}" />
                        <Setter Property="Foreground" Value="{StaticResource White0}" />
                        <Setter Property="FontWeight" Value="Bold" />
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>

                <!--#### ACTYPE = 4 ##*##-->
                <!--NOT SELECTED,  MOUSEOVER / FALSE -->
                <!--4, False, False -->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding AcType}" Value="4" />
                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="False" />
                        <!--<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=IsKeyboardFocusWithin}" Value="False" />-->
                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGridRow}, Path=IsMouseOver}" Value="False" />
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <!--<Setter Property="Background" Value="{StaticResource Red1}" />-->
                        <Setter Property="Background" Value="{Binding Converter={StaticResource Resource2BrushConvert}, ConverterParameter=Magenta7}" />
                        <Setter Property="Foreground" Value="{StaticResource Black4}" />
                        <Setter Property="FontWeight" Value="Bold" />
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>

                <!--#### ACTYPE = 4 ####-->
                <!--NOT SELECTED,  MOUSEOVER / TRUE -->
                <!--4, False, True -->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding AcType}" Value="4" />
                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="False" />
                        <!--<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=IsKeyboardFocusWithin}" Value="False" />-->
                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGridRow}, Path=IsMouseOver}" Value="True" />
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <!--<Setter Property="Background" Value="{StaticResource Red1}" />-->
                        <Setter Property="Background" Value="{Binding Converter={StaticResource Resource2BrushConvert}, ConverterParameter=Magenta0}" />
                        <Setter Property="Foreground" Value="{StaticResource Black0}" />
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>

                <!--#endregion Triggers-->
            </Style.Triggers>
        </Style>


        <conv:DateTimeToShortStringConverter x:Key="DateTimeToShortStringConverter"/>
        <!--<conv:GetCurrentReccount x:Key="SwitchReccordCounter/"/>-->
    </Window.Resources>
    <!--#region listview 3-->
    <Grid x:Name="Maingrid">

        <!--Background for entire page-->
        <Grid.Background>
            <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                <GradientStop Color="{StaticResource ClrBlue4}" Offset="0"/>
                <GradientStop Color="Gainsboro" Offset="0.972"/>
            </LinearGradientBrush>
        </Grid.Background>

        <Grid.RowDefinitions>
            <RowDefinition  Height="25"/>
            <RowDefinition  Height="35"/>
            <RowDefinition x:Name="row1" Height="*"/>
            <RowDefinition  Height="25"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <!--#region Top labels-->
        <Label x:Name="title" Grid.Row="0" Foreground="White" 
					 HorizontalContentAlignment="Left"
					  HorizontalAlignment="Left" 
					 FontWeight="Bold"
					>Listview with GroupStyle to group by BankNo (lview3)</Label>
        <Label x:Name="Infopanel"  Grid.Row="4" Foreground="{StaticResource Black0}" 
               Background="{StaticResource Orange7}"
					HorizontalContentAlignment="Left"
					HorizontalAlignment="Stretch" 
                    VerticalAlignment="Bottom"
                    Height="30"
                    Content="Loading....."
                    FontWeight="Bold"
                    Margin="10 0 200 0"/>
        <!--#endregion Top labels-->

        <!--#region Textboxes-->
        <Grid Grid.Row="1">
            <WrapPanel Orientation="Horizontal">
                <TextBlock 
                        Text="Total records to load :"
                        Background="Transparent"
                        Foreground="White"
                        HorizontalAlignment="Left"
                        TextAlignment="Center"
                         FontSize="14"
                        Width="142" Margin="11,6,0,6"/>
                <TextBlock 
                        Text="ListBox :"
                        Background="Transparent"
                        Foreground="White"
                        HorizontalAlignment="Center"
                        TextAlignment="Center"
                          FontSize="14" Height="20" 
                        Width="60"/>

                <TextBox x:Name="MaxListbox"
                        Text=""
                        Background="{StaticResource Gray6}"
                        Foreground="Black"
                        TextAlignment="Center"
                        Width="65" Height="25"
                        FontSize="14"/>

                <TextBlock 
                        Text="ListView :"
                        Background="Transparent"
                        Foreground="White"
                        HorizontalAlignment="Center"
                        TextAlignment="Center"
                         FontSize="14"
                        Margin="15 0 0 0"
                        Width="60"  Height="20"/>

                <TextBox x:Name="MaxListview"
                        Text=""
                        Background="{StaticResource Gray6}"
                        Foreground="Black"
                       TextAlignment="Center" Height="25"
                        FontSize="14" Width="60"/>

                <TextBlock 
                        Text="DataGrid :"
                        Background="Transparent"
                        Foreground="White"
                        HorizontalAlignment="Left"
                        TextAlignment="Center"
                        FontSize="14"
                        Width="60" Height="20" Margin="15 0,0,0"/>
                <TextBox x:Name="MaxDatagrid"
                        Text="334"
                        Background="{StaticResource Gray6}"
                        Foreground="Black"
                         TextAlignment="Center"
                        Width="65"
                        FontSize="14"  Height="24"/>

            </WrapPanel>
            <Label 
                    Background="Transparent"
                    Foreground="Red"
                    HorizontalAlignment="Right"
                    FontSize="14"
                    FontWeight="DemiBold"
                    Content="Records in  current view" Margin="0,2,80,3"/>
            <TextBlock x:Name="reccount"
                                    Background="{StaticResource Red4}"
                                    Text="{Binding RecCount, UpdateSourceTrigger=PropertyChanged}"
                                    Foreground="White"
                                     HorizontalAlignment="Right"
                                    TextAlignment="Center"
                                    FontSize="16" Width="60" Margin="0,5,10,3" Height="22"/>
        </Grid>
        <!--<TextBlock.DataContext>
                                <local:GroupedAccounts/>
                            </TextBlock.DataContext>-->

        <!--#endregion Textboxes-->

        <Grid x:Name="maingrid"
            Grid.Row="2" Margin="0,0,0,0" Grid.RowSpan="3"
              VerticalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="200"/>
                <!--<ColumnDefinition Width="10"/>-->
            </Grid.ColumnDefinitions>

            <DataGrid Name="Dgrid1"
                            Grid.Row="0"
                            Grid.Column="0"
							BorderBrush="Black"
							BorderThickness="0"
							Foreground="{StaticResource Black0}"
							Height="Auto"
							Margin="10,0,0,30"
                            CanUserAddRows="False"
							VerticalContentAlignment="Stretch"
                   			CellStyle="{StaticResource BankAccountGridStyle}"
                            Visibility="Hidden"/>

            <ListBox Name="lbox1"
	                        Grid.Row="0"
                            Grid.Column="0"                      
							Background="{StaticResource Orange5}"
							BorderBrush="Black"
							BorderThickness="0"
							Foreground="{StaticResource Black0}"
							Height="Auto"
							Margin="10,0,0,30"
							VerticalContentAlignment="Stretch" 
							Visibility="Hidden">

                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <WrapPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding Id}" Foreground="Black" Width="30"/>
                            <TextBlock Text="{Binding CustNo}" Foreground="Black" Width="65"/>
                            <TextBlock Text="{Binding BankNo}" Foreground="Black" Width="65"/>
                            <TextBlock Text="{Binding AcType}" Foreground="Black" Width="20"/>
                            <TextBlock Text="{Binding Balance}" Foreground="Black" Width="60 "/>
                            <TextBlock Text="{Binding ODate, Converter={StaticResource DateTimeToShortStringConverter}}" Foreground="Black" Width="70"/>
                            <TextBlock Text="{Binding CDate, Converter={StaticResource DateTimeToShortStringConverter}}"  Foreground="Black" Width="70"/>
                        </WrapPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

            <ListView x:Name="lview3" Visibility="Hidden">
            </ListView>

            <ItemsControl x:Name="ItemsList"
                          Background="Yellow"
                          Visibility="Visible"
                ItemsSource="{Binding lvview}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Expander Header="{Binding AcType}">
                                <ItemsControl
                                    Name="icTodoList"
                                    ItemsSource="{Binding lvview}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="40" />
                                                    <RowDefinition Height="*" />
                                                </Grid.RowDefinitions>
 
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="300" />
                                                        <ColumnDefinition Width="*" />
                                                    </Grid.ColumnDefinitions>
 
                                                    <TextBlock
                                                        VerticalAlignment="Center" Text="{Binding Name}" />
 
                                                    <Grid Column="1">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*" />
                                                            <ColumnDefinition Width="*" />
                                                        </Grid.ColumnDefinitions>
 
                                                        <Button
                                                            Visibility="{Binding UpdateButtonVisibility, Converter={StaticResource BoolToVisibilityConverter}}"
                                                            Name="Update"
                                                            Width="80"
                                                            Height="30"
                                                            HorizontalAlignment="Right"
                                                            Content="{Binding UpdateButtonText}" />
 
                                                        <Button
                                                            Name="OpenInstallPauseResume"
                                                            Grid.Column="1"
                                                            Width="80"
                                                            Height="30"
                                                            HorizontalAlignment="Right"
                                                            Content="{Binding OpenButtonText}" />
                                                    </Grid>
                                                </Grid>
 
                                                <Grid Grid.Row="1">
                                                    <ProgressBar Background="Yellow"
                                                        Visibility="{Binding ProgressVisibility, Converter={StaticResource BoolToVisibilityConverter}}"
                                                        Height="20" />
                                                    <Button
                                                            Name="CloseBtn"
                                                            Grid.Column="2"
                                                            Width="80"
                                                            Height="30"
                                                            HorizontalAlignment="Right"
                                                            Content="Close"
                                                        Click="CloseBtn_Click"/>
                                                </Grid>
                                            </Grid>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                        </Expander>
                    </Grid>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
    </ItemsControl>
            
            
            
            
            
            <!--<ListBox x:Name="lview3" Visibility="Visible">-->

                <!--<CollectionViewSource x:Key="cvsActors" Source="{Binding ActorList}" >-->
                    <!--<ListBox.Resources>
                         <CollectionViewSource x:Key="accounttypes" Source="{Binding data:lvview}">
                                <CollectionViewSource.SortDescriptions>
                                    <scm:SortDescription PropertyName="AcType"/>
                                </CollectionViewSource.SortDescriptions>
                                <CollectionViewSource.GroupDescriptions>
                                    <data:PropertyGroupDescription  PropertyName="AcType"/>
                                </CollectionViewSource.GroupDescriptions>
                            </CollectionViewSource>
                    </ListBox.Resources>-->
                <!--/// Expander line only-->

                <!--<ListBox.GroupStyle>
                    --><!--//Not sure how this works really !!--><!--

                    <GroupStyle>
                           --><!--/// Expander line only--><!--

                        <GroupStyle.ContainerStyle>
                                --><!--All binding names are defaulted by xaml itself - we just use them as is
                            Value="{StaticResource GroupItemTemplate}"/>--><!--

                            <Style TargetType="{x:Type GroupItem}" >
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate>

                                            --><!--This lets us set  the default expand state for the the Expander groups--><!--

                                            <Expander IsExpanded="true" Header="{Binding AcType}">
                                                --><!--Now we format the Group header line itself-->

                                                <!--<Expander.Header >
                                                    <StackPanel Orientation="Horizontal">
                                                        <TextBlock Text=" Bank A/c's by Account Type  : ( "
																		FontSize="14"
																		Foreground="Red"
																		FontStyle="Italic"
																		VerticalAlignment="Bottom" />

                                                        --><!--// NB THIS BINDING MUST BE Name, IT IS AN INTERNAL VARIABLE AND MUST BE 
																// used as is >
                                                                // In  rthis case, it  displays the AcType of each group (1-4)--><!--

                                                        <TextBlock Text="{Binding Name}"
																		FontWeight="Bold"
																			Foreground="Red"
																			FontSize="16"
																			VerticalAlignment="Bottom" />
                                                        <TextBlock Text=" )."
																		FontSize="14"
																		Foreground="Red"
																		FontStyle="Italic"
																		VerticalAlignment="Bottom" />
                                                    </StackPanel>
                                                </Expander.Header>--><!--                                                    
                                                <ItemsPresenter/>
                                            </Expander>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </GroupStyle.ContainerStyle>
                    </GroupStyle>
                </ListBox.GroupStyle>

                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel>
                            <TextBlock Margin="5" FontSize="16" FontWeight="Bold" Text="{Binding Path=AcType}"/>
                            <Expander Name="expender" IsExpanded="true"  >
                                <Expander.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text=" Bank A/c's by Account Type  : ( "
													FontSize="14"
													Foreground="Red"
													FontStyle="Italic"
													VerticalAlignment="Bottom" />

                                        --><!--// NB THIS BINDING MUST BE Name, IT IS AN INTERNAL VARIABLE AND MUST BE 
											// used as is >
                                            // In  rthis case, it  displays the AcType of each group (1-4)--><!--

                                        <TextBlock Text="{Binding Name}"
															FontWeight="Bold"
																Foreground="Red"
																FontSize="16"
																VerticalAlignment="Bottom" />
                                        <TextBlock Text=" )."
															FontSize="14"
															Foreground="Red"
															FontStyle="Italic"
															VerticalAlignment="Bottom" />
                                    </StackPanel>

                                </Expander.Header>
                            </Expander>
                        </StackPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>

            </ListBox>-->


            <Border x:Name="_border"
                    Grid.Column="1"
                    Padding="1" 
                    BorderThickness="0"
                    VerticalAlignment="Top"
                    HorizontalAlignment="Left"
                    Height="{Binding ActualHeight, ElementName=maingrid}"    
                    Width="200"
                    BorderBrush="{StaticResource Red5}" Margin="0,0,0,0">

                <StackPanel 
                        Orientation="Vertical"
                        Background="LightGreen"    
                        Height="{Binding ActualHeight, ElementName=_border}"                  
                        Grid.Row="1" 
                        Grid.RowSpan="3"
                        Grid.Column="1" VerticalAlignment="Stretch">

                    <!--#region buttons-->

                    <Label x:Name="Button1" 
                            Height="45"
                            Content="Clear"
                           HorizontalContentAlignment="Center"
                           VerticalContentAlignment="Center"
                            PreviewMouseLeftButtonDown="ClearViewer"
                           MouseEnter="MouseOverGreen"
                           MouseLeave="MouseLeaveGreen"
                            Background="LightGreen"/>

                    <!--/ Load ListView-->
                    <!--/ Load ListView-->
                    <Label x:Name="Button6" 
                            Height="45"
                           HorizontalContentAlignment="Center"
                           VerticalContentAlignment="Center"
                            Content="Load ListBox"
                            PreviewMouseLeftButtonDown="LoadListbox"
                           MouseEnter="MouseOverGreen"
                           MouseLeave="MouseLeaveGreen"
                            Background="LightGreen"/>

                    <!--//Load Grid-->
                    <Label  x:Name="Button5" 
                            Height="45"
                           HorizontalContentAlignment="Center"
                           VerticalContentAlignment="Center"
                            Content="Load ListView"
                            PreviewMouseLeftButtonDown="LoadListview"
                           MouseEnter="MouseOverGreen"
                           MouseLeave="MouseLeaveGreen"
                            Background="LightGreen"/>

                    <Label x:Name="Button2" 
                            Height="45"
                            Content="Load DataGrid"
                            HorizontalContentAlignment="Center"
                           VerticalContentAlignment="Center"
                           PreviewMouseLeftButtonDown="LoadDatagrid"
                           MouseEnter="MouseOverGreen"
                           MouseLeave="MouseLeaveGreen"
                            Background="LightGreen"/>
                    <!--// Toggle view-->
                    <Label x:Name="Button4" 
                            Height="45"
                            Content="Toggle View"
                           HorizontalContentAlignment="Center"
                           VerticalContentAlignment="Center"
                           MouseEnter="MouseOverOrange"
                           MouseLeave="MouseLeaveOrange"
                            PreviewMouseLeftButtonDown="ToggleView"
                            Background="{StaticResource Orange5}"
                            Foreground="Black"/>
                    <!--// Close window-->

                    <!--#endregion buttons-->

                    <TextBlock Text="Enter filter value for Customer #"
                            Width="178"
                               TextWrapping="Wrap"
                            HorizontalAlignment="Center"
                            TextAlignment="Center"
                            Margin="0 5 0 0"
                            Height="19"/>
                    <TextBox x:Name="Textbox1"
                            Width="100"
                            HorizontalAlignment="Center"
                            TextAlignment="Center"
                            Margin="0 5 0 10"
                            Height="25"/>
                    <Label x:Name="Button3" 
                            Height="45"
                            Content="Close"
                           HorizontalContentAlignment="Center"
                           VerticalContentAlignment="Center"
                            PreviewMouseLeftButtonDown="Button3_Click"
                           MouseEnter="MouseOverRed"
                           MouseLeave="MouseLeaveRed"
                            Background="Red"
                            Foreground="White"/>
                </StackPanel>

            </Border>

        </Grid>
    </Grid>
</Window>