<Window x:Class="MyDev.Views.TreeViews"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MyDev.Views"
        xmlns:model="clr-namespace:MyDev.ViewModels"
        xmlns:views="clr-namespace:MyDev.Views"
        xmlns:conv="clr-namespace:MyDev.Converts"
	  KeyDown="Window_KeyDown"
	  xmlns:behaviors="clr-namespace:MyDev.ViewModels"
        mc:Ignorable="d"
	  Loaded="Window_Loaded"
        Title="Tree Views" Height="450" Width="1080"
	  MinHeight="450" MinWidth="1080">
	<Window.Background>
		<LinearGradientBrush  StartPoint="1,0" EndPoint="0,0">
			<GradientStop Offset="0" Color="#FFAAAAAA" />
			<GradientStop Offset="0.3" Color="#FF6B8E95" />
			<GradientStop Offset="0.609" Color="#FF6B8E95" />
			<GradientStop Offset="1" Color="#FF14A7C1" />
			<!--<GradientStop Offset="0" Color="#FF193A44" />-->
		</LinearGradientBrush>
	</Window.Background>

	<Window.Resources>
		<conv:BoolToYesNo x:Key="boolToYesNo"/>

		<!--#region working styles-->
		<Style x:Key="TreeViewItemFocusVisual">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<Border>
							<Rectangle Margin="0,0,0,0"
								 StrokeThickness="5"
								 Stroke="Black"
								 StrokeDashArray="1 2"
								 Opacity="0"/>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<!--<Style x:Key="{x:Type TreeViewItem}" TargetType="{x:Type TreeViewItem}">-->
		<Style x:Key="TreeViewStyle1" TargetType="{x:Type TreeViewItem}">
			<Setter Property="Background" Value="Green"/>
			<Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="Padding" Value="1,0,0,0"/>
			<Setter Property="Foreground" Value="{StaticResource White0}"/>
			<!--<Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>-->
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TreeViewItem}">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="10"/>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="*"/>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition/>
							</Grid.RowDefinitions>
							<Border Name="Bd"
								Grid.Column="1"                                
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								Padding="{TemplateBinding Padding}">
								<ContentPresenter x:Name="PART_Header"
									    ContentSource="Header"
									    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
							</Border>
							<!--TextElement.Foreground="{TemplateBinding Foreground`}"-->
							<ItemsPresenter x:Name="ItemsHost"
								    TextElement.FontSize="{TemplateBinding FontSize}"
								  Grid.Row="1"
								  Grid.Column="1"
								  Grid.ColumnSpan="2"/>
						</Grid>

						<ControlTemplate.Triggers>
							<Trigger Property="IsExpanded" Value="false">
								<Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
								<Setter Property="Foreground" Value="{StaticResource White0}"/>
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="HasHeader" Value="false"/>
									<Condition Property="Width" Value="Auto"/>
								</MultiTrigger.Conditions>
								<Setter TargetName="PART_Header" Property="MinWidth" Value="75"/>
								<Setter Property="Foreground" Value="{StaticResource White0}"/>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="HasHeader" Value="false"/>
									<Condition Property="Height" Value="Auto"/>
								</MultiTrigger.Conditions>
								<Setter TargetName="PART_Header" Property="MinHeight" Value="19"/>
								<Setter Property="Foreground" Value="{StaticResource White0}"/>
							</MultiTrigger>
							<Trigger Property="IsSelected" Value="true">
								<Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
								<Setter Property="Foreground" Value="{StaticResource Red5}"/>
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<!--<Condition Property="IsSelectionActive" Value="false"/>-->
								</MultiTrigger.Conditions>
								<Setter TargetName="Bd" Property="Background" Value="{StaticResource White0}"/>
								<Setter Property="Foreground" Value="{StaticResource Red5}"/>
							</MultiTrigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<!--#endregion working styles-->

		<SolidColorBrush x:Key="GlyphBrush" Color="#444" />

		<!--// Togglebutton style - WORKS !-->
		<Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ToggleButton">
						<Grid
							Width="25"
							Height="25"
							Background="Transparent">
							<Path x:Name="ExpandPath"
								HorizontalAlignment="Left" 
								VerticalAlignment="Center" 
								Margin="1,1,1,1"
								Fill="{StaticResource Red5}"
								Data="M 4 0 L 15 7 L 4 15 Z"/>
							<!--Fill="{StaticResource GlyphBrush}"-->
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsChecked" Value="True">
								<Setter Property="Data" TargetName="ExpandPath" Value="M 9 0 L 15 15 L 0 15 Z"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!--#region not in use-->
		<!--// This controls the Togglebuton style above ...-->
		<!--<Style x:Key="{x:Type TreeViewItem}" TargetType="{x:Type TreeViewItem}">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="Padding" Value="1,0,0,0"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TreeViewItem}">
						<Grid >
							<Grid.ColumnDefinitions>
								<ColumnDefinition MinWidth="25" Width="Auto"/>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="*"/>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition/>
							</Grid.RowDefinitions>
							<ToggleButton x:Name="Expander"
					                  Style="{StaticResource ExpandCollapseToggleStyle}" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
							<Border Name="Bd"
								  Grid.Column="1"
								  Background="{TemplateBinding Background}"
								  BorderBrush="{TemplateBinding BorderBrush}"
								  BorderThickness="{TemplateBinding BorderThickness}"
								  Padding="{TemplateBinding Padding}">
								<ContentPresenter x:Name="PART_Header"
									    ContentSource="Header"
									    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									    VerticalAlignment="Center"/>
							</Border>
							<ItemsPresenter x:Name="ItemsHost"
								Grid.Row="1"
								Grid.Column="1"
								Grid.ColumnSpan="2"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsExpanded" Value="false">
								<Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
							</Trigger>
							<Trigger Property="HasItems" Value="false">
								<Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="HasHeader" Value="false"/>
									<Condition Property="Width" Value="Auto"/>
								</MultiTrigger.Conditions>
								<MultiTrigger.Setters>
									<Setter TargetName="PART_Header" Property="MinWidth" Value="75"/>
								</MultiTrigger.Setters>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="HasHeader" Value="false"/>
									<Condition Property="Height" Value="Auto"/>
								</MultiTrigger.Conditions>
								<MultiTrigger.Setters>
									<Setter TargetName="PART_Header" Property="MinHeight" Value="25"/>
								</MultiTrigger.Setters>
							</MultiTrigger>
							
							-->
		<!--<Trigger Property="IsSelected" Value="true">
								<Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
							</Trigger>-->

		<!--// These next 2 control color of ToggleButton when selected and/or focused-->
		<!--
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="IsSelectionActive" Value="false"/>
								</MultiTrigger.Conditions>
								<MultiTrigger.Setters>
									<Setter TargetName="Bd" Property="Background" Value="{StaticResource Red5}"/>
									<Setter Property="Foreground" Value="{StaticResource White0}"/>
									<Setter Property="FontWeight" Value="Regular"/>
								</MultiTrigger.Setters>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="IsSelectionActive" Value="true"/>
								</MultiTrigger.Conditions>
								<MultiTrigger.Setters>
									<Setter TargetName="Bd" Property="Background" Value="{StaticResource Red5}"/>
									<Setter Property="Foreground" Value="{StaticResource White0}"/>
									<Setter Property="FontWeight" Value="DemiBold"/>
								</MultiTrigger.Setters>
							</MultiTrigger>

							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>-->

		<!--#endregion not in use-->

		<Style TargetType="{x:Type TreeViewItem}">
			<Setter Property="HeaderTemplate">
				<Setter.Value>
					<DataTemplate>
						<StackPanel Orientation="Horizontal">
							<!--<Image Width="20" Margin="3" 
								 Source="{Binding 
									RelativeSource={RelativeSource 
									Mode=FindAncestor,
									AncestorType={x:Type TreeViewItem}}, Path=Tag, 
									Converter={x:Static conv:StringToImageConverter.Instance}, 
									ConverterParameter=IsExpanded}"/>-->
							<Image Width="20" Margin="3" 
								 Source="{Binding 
									RelativeSource={RelativeSource 
									Mode=FindAncestor,
									AncestorType={x:Type TreeViewItem}}, Path=Tag, 
									Converter={x:Static conv:StringToImageConverter.Instance}}"/>
							<!--XPath=IsExpanded}"/>-->

							<!--<Image  Height="20" Width="20">
								<Image.Source>

									<MultiBinding Converter="{x:Static conv:StringToImageMultiConverter.Instance}">
										<Binding Path="Tag" RelativeSource="{RelativeSource 
											Mode=FindAncestor,
											AncestorType={x:Type TreeViewItem}}" />
										<Binding Path="IsExpanded" ElementName="TreeViewItem" />
									</MultiBinding>
								</Image.Source>
							</Image>-->

							<TextBlock VerticalAlignment="Center" Text="{Binding}" FontSize="18"/>
						</StackPanel>
					</DataTemplate>
				</Setter.Value>

			</Setter>
			<Style.Triggers>
				<!--<MultiTrigger>
					<MultiTrigger.Conditions>
						<Condition Property="IsExpanded" Value="True"/>
					</MultiTrigger.Conditions>
					<MultiTrigger.Setters>
						<Setter Property="Tag" Value="Drive"/>
					</MultiTrigger.Setters>
				</MultiTrigger>-->
			</Style.Triggers>
		</Style>

	</Window.Resources>
	<!--<Window.DataContext>
		<vm:ViewModel />
	</Window.DataContext>-->

	<Grid Margin="0,-2,1,2">

		<Grid.RowDefinitions>
			<RowDefinition Height="5" />
			<RowDefinition Height="3*" />
			<RowDefinition Height="1.3*" />

		</Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="5" />
			<ColumnDefinition Width="350" />
			<ColumnDefinition Width="350" />
			<ColumnDefinition x:Name="col4" Width="350" />
			<ColumnDefinition Width="5" />
		</Grid.ColumnDefinitions>
		<!--#region TreeViews-->

		<!--#region Disk Directory tree-->
		<!--// Uses default style in Resources !!!-->
			    <!--ItemsSource="{Binding DirectoryItemViewModel}"-->
		<TreeView x:Name="treeViewModel" 
				Grid.Column="1" 			    
				Grid.Row="1"
				Background="{StaticResource Yellow3}"
				FontSize="16"
				Foreground="White" 
			    Padding="5 5 5 5"
				SelectedItemChanged="treeViewModel_SelectedItemChanged"
				TreeViewItem.Expanded="treeViewModel_Expanded"
				TreeViewItem.Collapsed="treeViewModel_Collapsed"
				TreeViewItem.Selected="treeViewModel_Selected"
				HorizontalAlignment="Center" 
				ScrollViewer.HorizontalScrollBarVisibility="Auto"
				ScrollViewer.VerticalScrollBarVisibility="Auto"
				Width="320" >

		</TreeView>
		<TreeView x:Name="treeView4" 
				Grid.Column="3" 			    
				Grid.Row="1"
				Background="Green"
				FontSize="16"
				Foreground="White" 
			    Padding="5 5 5 5"
				SelectedItemChanged="treeView4_SelectedItemChanged"
				TreeViewItem.Expanded="TreeViewItem_Expanded"
				TreeViewItem.Collapsed="treeView4_Collapsed"
				TreeViewItem.Selected="treeView4_Selected"
				HorizontalAlignment="Center" 
				ScrollViewer.HorizontalScrollBarVisibility="Auto"
				ScrollViewer.VerticalScrollBarVisibility="Auto"
				Width="345" >

		</TreeView>
		<!--#endregion Disk Directory tree-->

		<!--#endregion TreeViews-->

		<Grid Grid.Row="1"  Grid.Column="2" Grid.ColumnSpan="1" MinHeight="250" >

			<Grid.RowDefinitions>
				<RowDefinition Height="25" />
				<RowDefinition Height="274.33" />
			</Grid.RowDefinitions>
			<TextBlock Text="Folder Contents" 
				     Grid.Row="0"				   
				     Background="Red" 
				     Foreground="White" 
				     HorizontalAlignment="Center"
				     TextAlignment="Center"
				     Padding="0 5 0 0" 
				     MinWidth="249"
				     Height="25" Width="494"/>

			<ListBox x:Name="listBox" 
				     Grid.Row="1"
				Margin="0,5,12,0" 
				Background="{StaticResource White4}"
			/>
			<!--MinHeight="235"-->
		</Grid>

		<Button x:Name="Test" 
			  Grid.Column="1"
			Grid.Row="2"
			  Margin="0,0,2,71" 
			  Click="TestViewModel"
			  Content="{Binding Test}"
			  Foreground="White"
			  Height="40" 
			  HorizontalAlignment="Right"
			  Template="{StaticResource HorizontalGradientTemplateYellow}"
			  VerticalAlignment="Bottom"
			  Width="100"/>

		<!--<TextBox x:Name="Textbox" 
			    Grid.Column="1"
			Grid.Row="2"
			    Margin="0,0,0,20" 
			   Background="Aqua"
			   Foreground="Black"
			   Height="25"
			   HorizontalAlignment="Left"
			   Width="200"
			   VerticalAlignment="Bottom"
			   />-->

		<!--#region buttons-->

		<!--<Button x:Name="AddItem" 
			    Grid.Column="3"
			Grid.Row="2"
			    Margin="248,0,0,69" 
				Click="AddItem_Click"			  
				Content="Add"
				Foreground="White"
				Height="40" 
				HorizontalAlignment="Left"
				Template="{StaticResource HorizontalGradientTemplateGreen}"
				VerticalAlignment="Bottom"
				Width="89" RenderTransformOrigin="10.697,0.525"/>-->

		<!--<Button x:Name="DeleteItem" 
			    Grid.Column="3"
			Grid.Row="2"
			    Margin="249,0,0,18" 
				Click="DeleteItem_Click"
				Content="Delete"
				Foreground="White"
				Height="40" 
				HorizontalAlignment="Left"
			     Template="{StaticResource HorizontalGradientTemplateRed}"
				VerticalAlignment="Bottom"	
				 Width="89"/>-->
		<Button x:Name="AllCloseBtn" 
			    Grid.Column="3"
			Grid.Row="2"
			    Margin="0,0,11,12" 
			     Click="App_Close"
			     Content="Close App"
			     Foreground="{StaticResource ResourceKey=White0}"
			     Height="40" 
			     HorizontalAlignment="Right"
			     Template="{StaticResource HorizontalGradientTemplateRed}"
			     VerticalAlignment="Bottom"
			     Width="110" />
		<Button x:Name="Close_Copy" 
			    Grid.Column="3"
			Grid.Row="2"
			    Margin="0,0,129,12" 
			  Click="Close_Btn"
			  Content="Close"
			  Foreground="{StaticResource ResourceKey=White0}"
			  Height="40" 
			  HorizontalAlignment="Right"
			  Template="{StaticResource HorizontalGradientTemplateGreen}"
			  VerticalAlignment="Bottom"
			  Width="110"  />
		<Button x:Name="Expand_All" 
			    Grid.Column="3"
			Grid.Row="2"
			    Margin="4,0,0,78" 
			  Click="ExpandAll"
			  Content="Expand All"
			  Foreground="White"
			  Height="40" 
			  HorizontalAlignment="Left"
			  Template="{StaticResource HorizontalGradientTemplateGreen}"
			  VerticalAlignment="Bottom"
			  Width="100"/>
		<!--#endregion buttons-->

		<TextBox x:Name="Selection" 
			    Grid.Column="1"
			Grid.Row="2"
			   Grid.ColumnSpan="3"
			    Margin="0,0,263,17" 
			Background="{StaticResource Red5}"
			Foreground="White"
			Height="25"
			HorizontalAlignment="Right"
			HorizontalContentAlignment="Center"
			   Padding="0 3 0 0"
			Width="782"
			   Text="Information panel ..."
			VerticalAlignment="Bottom"
			   />
		<CheckBox x:Name="ShowallFiles" IsChecked="false"
			    Grid.Column="2"
			Grid.Row="2"
			    Click="ShowallFiles_Click"
			    Content="Show ALL Files. including Hidden"
			    FontSize="18"
			    Padding="0 3 0 0"
			    Margin="25,0,149,87"
			    VerticalAlignment="Bottom"/>
		
		<Button x:Name="Close_Copy1" 
			  Grid.Column="3"
			Grid.Row="2"
			  Margin="0,0,6,81" 
			  Click="Refresh_Btn"
			  Content="Refresh"
			  Foreground="{StaticResource ResourceKey=White0}"
			  Height="40" 
			  HorizontalAlignment="Right"
			  Template="{StaticResource HorizontalGradientTemplateGreen}"
			  VerticalAlignment="Bottom"
			  Width="110"   />
	</Grid>
</Window>
